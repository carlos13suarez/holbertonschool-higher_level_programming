>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

# Test value different than int
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer


# Test floats
>>> bg.integer_validator("distance", 2.5)
Traceback (most recent call last):
    ...
TypeError: distance must be an integer


# Test value 0
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0


# Test negative value
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0


# Test empty value
>>> bg.integer_validator("distance", )
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

# Test without arguments
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
